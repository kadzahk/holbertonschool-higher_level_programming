===========================
2-matrix_divided
===========================

Import module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Uses:

Test matrix with different size
    >>> matrix_divided([[1, 2, 3],[4, 5]], 1)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

matrix of ints:
    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

divided by a float:
    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], 2.7)
    [[0.37, 0.74, 1.11], [1.48, 1.85, 2.22]]

divide by zero:
    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

non - matrix
    >>> matrix_divided("Hello", 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

divide by negative number
 >>> matrix_divided([[1, 2, 3],[4, 5, 6]], -1)
 [[-1.0, -2.0, -3.0], [-4.0, -5.0, -6.0]]

Test case dividing by string
    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], "hello")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

    >>> matrix_divided([3, 3, 27], 6)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[], []], 6)
    [[], []]

    >>> matrix_divided([[]], 6)
    [[]]

    >>> matrix_divided([[3, 6, 24], ["47", 87, 0]], 5)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats